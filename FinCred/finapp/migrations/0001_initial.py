# Generated by Django 5.1.4 on 2024-12-11 19:43

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="Stock",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("ticker", models.CharField(max_length=10, unique=True)),
                ("company_name", models.CharField(max_length=255)),
                ("current_price", models.FloatField()),
                ("historical_data", models.JSONField(default=list)),
            ],
        ),
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                ("email", models.EmailField(max_length=254, unique=True)),
                ("first_name", models.CharField(max_length=30)),
                ("last_name", models.CharField(max_length=30)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        related_name="finapp_user_set",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        related_name="finapp_user_permissions_set",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="Budget",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "category",
                    models.IntegerField(
                        choices=[
                            (0, "Income"),
                            (1, "Housing"),
                            (2, "Food"),
                            (3, "Healthcare"),
                            (4, "Transportation"),
                            (5, "Recreation"),
                            (6, "Other"),
                            (7, "Stock"),
                        ],
                        verbose_name="Category",
                    ),
                ),
                (
                    "limit",
                    models.DecimalField(
                        decimal_places=2, max_digits=10, verbose_name="Budget Limit"
                    ),
                ),
                ("date_created", models.DateField(auto_now_add=True)),
                ("end_date", models.DateField(blank=True, null=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="budgets",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Detail",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "income",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=10,
                        verbose_name="INCOME",
                    ),
                ),
                (
                    "savings",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=10,
                        verbose_name="SAVINGS",
                    ),
                ),
                (
                    "total_expenditure",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=10,
                        verbose_name="TOTAL EXPENDITURE",
                    ),
                ),
                (
                    "housing",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=10,
                        verbose_name="HOUSING",
                    ),
                ),
                (
                    "food",
                    models.DecimalField(
                        decimal_places=2, default=0, max_digits=10, verbose_name="FOOD"
                    ),
                ),
                (
                    "healthcare",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=10,
                        verbose_name="HEALTHCARE",
                    ),
                ),
                (
                    "transportation",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=10,
                        verbose_name="TRANSPORTATION",
                    ),
                ),
                (
                    "recreation",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=10,
                        verbose_name="RECREATION",
                    ),
                ),
                (
                    "others",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=10,
                        verbose_name="OTHERS",
                    ),
                ),
                (
                    "stock",
                    models.DecimalField(
                        decimal_places=2, default=0, max_digits=10, verbose_name="STOCK"
                    ),
                ),
                (
                    "total_transactions",
                    models.IntegerField(default=0, verbose_name="TOTAL TRANSACTIONS"),
                ),
                (
                    "date_created",
                    models.DateField(
                        auto_now_add=True, null=True, verbose_name="DATE CREATED"
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="USER",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="EMI",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("loan_amount", models.FloatField(verbose_name="Loan Amount")),
                ("interest_rate", models.FloatField(verbose_name="Interest Rate (%)")),
                (
                    "tenure_months",
                    models.IntegerField(verbose_name="Tenure (in months)"),
                ),
                ("start_date", models.DateField(verbose_name="Start Date")),
                (
                    "paid_amount",
                    models.FloatField(default=0, verbose_name="Amount Paid"),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="loans",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="SavingsAccount",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "balance",
                    models.DecimalField(decimal_places=2, default=0, max_digits=10),
                ),
                ("goals", models.JSONField(default=list)),
                (
                    "date_created",
                    models.DateField(
                        auto_now_add=True, null=True, verbose_name="DATE CREATED"
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="savings_accounts",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="StockPortfolio",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("shares", models.FloatField(default=0)),
                ("purchase_price", models.FloatField()),
                (
                    "stock",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="finapp.stock"
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="stock_portfolio",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Transaction",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "time",
                    models.DateTimeField(auto_now_add=True, verbose_name="CREATED"),
                ),
                (
                    "last_updated",
                    models.DateTimeField(auto_now=True, verbose_name="LAST UPDATED"),
                ),
                (
                    "amount",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=10,
                        verbose_name="AMOUNT",
                    ),
                ),
                (
                    "type",
                    models.IntegerField(
                        choices=[
                            (0, "Income"),
                            (1, "Housing"),
                            (2, "Food"),
                            (3, "Healthcare"),
                            (4, "Transportation"),
                            (5, "Recreation"),
                            (6, "Other"),
                            (7, "Stock"),
                        ],
                        verbose_name="Type",
                    ),
                ),
                ("credit", models.BooleanField(default=False, verbose_name="CREDIT")),
                (
                    "description",
                    models.TextField(
                        blank=True, default="Description", verbose_name="DESCRIPTION"
                    ),
                ),
                (
                    "tags",
                    models.JSONField(blank=True, default=list, verbose_name="TAGS"),
                ),
                (
                    "date_created",
                    models.DateField(
                        auto_now_add=True, null=True, verbose_name="DATE CREATED"
                    ),
                ),
                (
                    "details",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="finapp.detail",
                        verbose_name="DETAILS",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="USER",
                    ),
                ),
            ],
        ),
        migrations.AddConstraint(
            model_name="detail",
            constraint=models.UniqueConstraint(
                fields=("user", "date_created"), name="unique_user_monthly_detail"
            ),
        ),
    ]
